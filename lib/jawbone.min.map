{"version":3,"sources":["View.js","Model.js","Jawbone.js"],"names":["View","model","constructor","template","onChange","render","renderedBindings","unpackBinding","binding","indexOf","keyLabel","keyStartIdx","replace","keyEndIdx","key","slice","valEndIdx","val","substBinding","text","els","htmlToElements","el","nodeName","attrsToRemove","attr","unpacked","nodeValue","eventName","addEventListener","event","push","substituted","attributes","toRemove","removeAttribute","innerText","target","value","bindings","Object","entries","__attrs","String","toString","proto","getPrototypeOf","descriptor","getOwnPropertyDescriptor","getOwnPropertyNames","rootEl","document","querySelector","generateBindings","attachEventListeners","innerHTML","i","length","prepend","html","createElement","content","childNodes","undefined","Model","attrs","spec","init","defineProperty","set","console","log","get","Jawbone","window"],"mappings":"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","file":"jawbone.min.map","sourceRoot":"../src","sourcesContent":["export default class View {\r\n  static model = undefined\r\n  static template = undefined\r\n\r\n  constructor(model) {\r\n    if (model) {\r\n      this.model = model\r\n    } else {\r\n      this.model = new this.constructor.model()\r\n    }\r\n    this.template = this.constructor.template\r\n\r\n    this.model.onChange = () => {\r\n      this.render()\r\n    }\r\n    this.render()\r\n  }\r\n\r\n  attachEventListeners(renderedBindings) {\r\n    const unpackBinding = binding => {\r\n      const identLabel = '<#jawbone-binding#>'\r\n      if (binding.indexOf(identLabel) != -1) {\r\n        binding = binding.replace(identLabel, '')\r\n      } else {\r\n        return null\r\n      }\r\n\r\n      \r\n      const keyLabel = '<#key:'\r\n      const keyStartIdx = binding.indexOf(keyLabel)\r\n      if (keyStartIdx != -1) {\r\n        binding = binding.replace(keyLabel, '')\r\n      }\r\n      const keyEndIdx = binding.indexOf('#>')\r\n      const key = binding.slice(keyStartIdx, keyEndIdx)\r\n      binding = binding.slice(keyEndIdx + 2)\r\n\r\n      const valLabel = '<#val:'\r\n      if (binding.indexOf(valLabel) != -1) {\r\n        binding = binding.replace(valLabel, '')\r\n      }\r\n      const valEndIdx = binding.indexOf('#>')\r\n      const val = binding.slice(0, valEndIdx)\r\n      binding = binding.slice(valEndIdx + 2)\r\n\r\n      return {\r\n        key,\r\n        val  \r\n      }\r\n    }\r\n    const substBinding = text => {\r\n      text = text.replace(/<#jawbone-binding#>/g, '', -1)\r\n      text = text.replace(/<#key:.*?#>/g, '', -1)\r\n      text = text.replace(/<#val:/g, '', -1)\r\n      text = text.replace(/#>/g, '', -1)\r\n      return text\r\n    }\r\n\r\n    let els = htmlToElements(renderedBindings)\r\n\r\n    for (let el of els) {\r\n      if (el.nodeName === 'BUTTON' || el.nodeName === 'DIV') {\r\n\r\n        let attrsToRemove = []\r\n        for (let attr of el.attributes) {\r\n          const unpacked = unpackBinding(attr.nodeValue)\r\n\r\n          // event handlers\r\n          if (typeof(this.model[unpacked.key]) === 'function') {\r\n            const eventName = attr.nodeName.slice(2) // remove 'on' from start\r\n            el.addEventListener(eventName, event => {\r\n              this.model[unpacked.key]()\r\n            })\r\n            attrsToRemove.push(attr.nodeName)\r\n          }\r\n          // value substitution\r\n          else {\r\n            const substituted = substBinding(attr.nodeValue)\r\n            attr.nodeValue = substituted\r\n          }\r\n\r\n        }\r\n\r\n        for (let toRemove of attrsToRemove) {\r\n          el.removeAttribute(toRemove)\r\n        }\r\n\r\n        const substituted = substBinding(el.innerText)\r\n        el.innerText = substituted\r\n      }\r\n      // if (el.nodeName === 'LABEL') {\r\n      //   const substituted = substBinding(el.innerText)\r\n      //   el.innerText = substituted\r\n      // }\r\n      // if (el.nodeName === 'P') {\r\n      //   const substituted = substBinding(el.innerText)\r\n      //   const unpacked = unpackBinding(el.innerText)\r\n      //   if (unpacked) {\r\n      //     el.innerText = substituted\r\n      //   }\r\n      // }\r\n      if (el.nodeName === 'INPUT') {\r\n        const substituted = substBinding(el.attributes['value'].nodeValue)\r\n        const unpacked = unpackBinding(el.attributes['value'].nodeValue)\r\n        if (unpacked) {\r\n          el.attributes['value'].nodeValue = substituted\r\n\r\n          el.addEventListener('change', event => {\r\n            this.model[unpacked.key] = event.target.value\r\n          })\r\n        }\r\n      }\r\n    }\r\n\r\n    return els\r\n  }\r\n\r\n  generateBindings(model) {\r\n    let bindings = {}\r\n\r\n    // add attrs\r\n    for (let [key, val] of Object.entries(model.__attrs)) {\r\n      let binding = new String(val)\r\n      binding.toString = () => `<#jawbone-binding#><#key:${key}#><#val:${val}#>`\r\n\r\n      bindings[key] = binding\r\n    }\r\n\r\n    // add functions from prototype\r\n    const proto = Object.getPrototypeOf(model)\r\n    for (let key of Object.getOwnPropertyNames(proto)) {\r\n      // ignore ctor\r\n      if (key === 'constructor') {\r\n        continue\r\n      }\r\n\r\n      const descriptor = Object.getOwnPropertyDescriptor(proto, key)\r\n\r\n      bindings[key] = descriptor.value\r\n      bindings[key].toString = () => `<#jawbone-binding#><#key:${key}#><#val:${key}#>`\r\n    }\r\n    return bindings\r\n  }\r\n\r\n  render() {\r\n    let rootEl = document.querySelector('#root')\r\n\r\n    const bindings = this.generateBindings(this.model)\r\n    const renderedBindings = this.template(bindings)\r\n\r\n    const els = this.attachEventListeners(renderedBindings)\r\n\r\n    rootEl.innerHTML = ''\r\n\r\n    for (let i = els.length-1; i >= 0; i--) {\r\n      rootEl.prepend(els[i])\r\n    }\r\n  }\r\n}\r\n\r\nfunction htmlToElements(html) {\r\n    var template = document.createElement('template');\r\n    template.innerHTML = html;\r\n    return template.content.childNodes;\r\n}","\r\nexport default class Model {\r\n  static spec = undefined\r\n  __attrs = null\r\n\r\n\r\n  constructor(attrs) {\r\n    if (attrs) {\r\n      this.spec = attrs\r\n    } else {\r\n      this.spec = this.constructor.attrs\r\n    }\r\n    this.init()\r\n  }\r\n\r\n  init() {\r\n    this.__attrs = {}\r\n\r\n    for (let [key, val] of Object.entries(this.spec)) {\r\n      Object.defineProperty(this, key, {\r\n        set: val => {\r\n          this.__attrs[key] = val\r\n\r\n          // trigger change event\r\n          if (this.onChange !== undefined) {\r\n            this.onChange()\r\n          }\r\n          console.log('changed:', key, 'to:', val)\r\n        },\r\n        get: () => {\r\n          return this.__attrs[key]\r\n        }\r\n      })\r\n      this[key] = val\r\n    }\r\n  }\r\n}","import View from './View'\r\nimport Model from './Model'\r\n\r\nconst Jawbone = {\r\n  View,\r\n  Model,\r\n}\r\n\r\nwindow.Jawbone = Jawbone\r\n\r\nexport default Jawbone"]}
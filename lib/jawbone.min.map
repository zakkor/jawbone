{"version":3,"sources":["View.js","Model.js","Jawbone.js"],"names":["View","model","parent","constructor","name","Jawbone","Model","template","el","document","querySelector","onChange","render","binding","indexOf","keyLabel","keyStartIdx","replace","keyEndIdx","key","slice","valEndIdx","val","text","renderedBindings","els","htmlToElements","nodeName","attrsToRemove","attr","unpacked","_unpackBinding","nodeValue","eventName","addEventListener","event","push","substituted","_substituteBinding","attributes","toRemove","removeAttribute","innerText","target","value","bindings","Object","entries","__attrs","String","toString","proto","getPrototypeOf","descriptor","getOwnPropertyDescriptor","getOwnPropertyNames","_generateBindings","_attachEventListeners","innerHTML","i","length","prepend","html","createElement","content","childNodes","undefined","attrs","spec","init","Proxy","get","set","defineProperty","window"],"mappings":"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","file":"jawbone.min.map","sourceRoot":"..\\src","sourcesContent":["import Jawbone from \"./Jawbone\";\r\n\r\nexport default class View {\r\n  static model = undefined\r\n  static template = undefined\r\n\r\n  constructor(model, parent) {\r\n    if (model) {\r\n      // received POJO, construct default model\r\n      if (model.constructor.name === 'Object') {\r\n        this.model = new Jawbone.Model(model) \r\n      } else {\r\n        this.model = model\r\n      }\r\n    } else {\r\n      this.model = new this.constructor.model()\r\n    }\r\n    this.template = this.constructor.template\r\n\r\n    if (this.constructor.el) {\r\n      this.el = document.querySelector(this.constructor.el)\r\n    }\r\n\r\n    this.model.onChange = () => {\r\n      this.render()\r\n    }\r\n    this.render()\r\n  }\r\n\r\n  _unpackBinding(binding) {\r\n    const identLabel = '<#jawbone-binding#>'\r\n    if (binding.indexOf(identLabel) != -1) {\r\n      binding = binding.replace(identLabel, '')\r\n    } else {\r\n      return null\r\n    }\r\n\r\n    \r\n    const keyLabel = '<#key:'\r\n    const keyStartIdx = binding.indexOf(keyLabel)\r\n    if (keyStartIdx != -1) {\r\n      binding = binding.replace(keyLabel, '')\r\n    }\r\n    const keyEndIdx = binding.indexOf('#>')\r\n    const key = binding.slice(keyStartIdx, keyEndIdx)\r\n    binding = binding.slice(keyEndIdx + 2)\r\n\r\n    const valLabel = '<#val:'\r\n    if (binding.indexOf(valLabel) != -1) {\r\n      binding = binding.replace(valLabel, '')\r\n    }\r\n    const valEndIdx = binding.indexOf('#>')\r\n    const val = binding.slice(0, valEndIdx)\r\n    binding = binding.slice(valEndIdx + 2)\r\n\r\n    return {\r\n      key,\r\n      val  \r\n    }\r\n  }\r\n\r\n  _substituteBinding(text) {\r\n    text = text.replace(/<#jawbone-binding#>/g, '', -1)\r\n    text = text.replace(/<#key:.*?#>/g, '', -1)\r\n    text = text.replace(/<#val:/g, '', -1)\r\n    text = text.replace(/#>/g, '', -1)\r\n    return text\r\n  }\r\n\r\n  _attachEventListeners(renderedBindings) {\r\n    let els = htmlToElements(renderedBindings)\r\n\r\n    for (let el of els) {\r\n      switch (el.nodeName) {\r\n      case 'BUTTON':\r\n      case 'DIV':\r\n      case 'P':\r\n      case 'LABEL':\r\n        let attrsToRemove = []\r\n        for (let attr of el.attributes) {\r\n          const unpacked = this._unpackBinding(attr.nodeValue)\r\n\r\n          // event handlers\r\n          if (typeof(this.model[unpacked.key]) === 'function') {\r\n            const eventName = attr.nodeName.slice(2) // remove 'on' from start\r\n            el.addEventListener(eventName, event => {\r\n              this.model[unpacked.key]()\r\n            })\r\n            attrsToRemove.push(attr.nodeName)\r\n          }\r\n          // value substitution\r\n          else {\r\n            const substituted = this._substituteBinding(attr.nodeValue)\r\n            attr.nodeValue = substituted\r\n          }\r\n\r\n        }\r\n\r\n        for (let toRemove of attrsToRemove) {\r\n          el.removeAttribute(toRemove)\r\n        }\r\n\r\n        const substituted = this._substituteBinding(el.innerText)\r\n        el.innerText = substituted\r\n        break\r\n      }\r\n\r\n      if (el.nodeName === 'INPUT') {\r\n        const substituted = this._substituteBinding(el.attributes['value'].nodeValue)\r\n        const unpacked = this._unpackBinding(el.attributes['value'].nodeValue)\r\n        if (unpacked) {\r\n          el.attributes['value'].nodeValue = substituted\r\n\r\n          el.addEventListener('change', event => {\r\n            this.model[unpacked.key] = event.target.value\r\n          })\r\n        }\r\n      }\r\n    }\r\n\r\n    return els\r\n  }\r\n\r\n  _generateBindings(model) {\r\n    let bindings = {}\r\n\r\n    // add attrs\r\n    for (let [key, val] of Object.entries(model.__attrs)) {\r\n      let binding = new String(val)\r\n      binding.toString = () => `<#jawbone-binding#><#key:${key}#><#val:${val}#>`\r\n\r\n      bindings[key] = binding\r\n    }\r\n\r\n    // add functions from prototype\r\n    const proto = Object.getPrototypeOf(model)\r\n    for (let key of Object.getOwnPropertyNames(proto)) {\r\n      // ignore ctor\r\n      if (key === 'constructor') {\r\n        continue\r\n      }\r\n\r\n      const descriptor = Object.getOwnPropertyDescriptor(proto, key)\r\n\r\n      bindings[key] = descriptor.value\r\n      bindings[key].toString = () => `<#jawbone-binding#><#key:${key}#><#val:${key}#>`\r\n    }\r\n    return bindings\r\n  }\r\n\r\n  render() {\r\n    const bindings = this._generateBindings(this.model)\r\n    const renderedBindings = this.template(bindings)\r\n\r\n    const els = this._attachEventListeners(renderedBindings)\r\n\r\n    if (this.el) {\r\n      this.el.innerHTML = ''\r\n\r\n      for (let i = els.length-1; i >= 0; i--) {\r\n        this.el.prepend(els[i])\r\n      }\r\n    } else {\r\n      return els\r\n    }\r\n  }\r\n}\r\n\r\nfunction htmlToElements(html) {\r\n    var template = document.createElement('template');\r\n    template.innerHTML = html;\r\n    return template.content.childNodes;\r\n}","\r\nexport default class Model {\r\n  static spec = undefined\r\n  __attrs = null\r\n\r\n\r\n  constructor(attrs) {\r\n    if (attrs) {\r\n      this.spec = attrs\r\n    } else {\r\n      this.spec = this.constructor.attrs\r\n    }\r\n    this.init()\r\n  }\r\n\r\n  init() {\r\n    this.__attrs = {}\r\n\r\n    for (let [key, val] of Object.entries(this.spec)) {\r\n      if (val.constructor.name === 'Array') {\r\n        let proxy = new Proxy(val, {\r\n          get: (target, name) => {\r\n            return target[name]\r\n          },\r\n          set: (target, name, value) => {\r\n            target[name] = value\r\n\r\n            // trigger change event\r\n            if (this.onChange !== undefined) {\r\n              this.onChange()\r\n            }\r\n\r\n            return true\r\n          }\r\n        })\r\n        val = proxy\r\n\r\n        // Object.defineProperty(this, key, {\r\n        //   set: val => {\r\n        //     this.__attrs[key] = val\r\n  \r\n        //     // trigger change event\r\n        //     if (this.onChange !== undefined) {\r\n        //       this.onChange()\r\n        //     }\r\n        //   },\r\n        //   get: () => {\r\n        //     return this.__attrs[key]\r\n        //   }\r\n        // })\r\n        // this[key] = proxy\r\n      }\r\n\r\n      Object.defineProperty(this, key, {\r\n        set: val => {\r\n          this.__attrs[key] = val\r\n\r\n          // trigger change event\r\n          if (this.onChange !== undefined) {\r\n            this.onChange()\r\n          }\r\n        },\r\n        get: () => {\r\n          return this.__attrs[key]\r\n        }\r\n      })\r\n      this[key] = val\r\n    }\r\n  }\r\n}","import View from './View'\r\nimport Model from './Model'\r\n\r\nconst Jawbone = {\r\n  View,\r\n  Model,\r\n}\r\n\r\nwindow.Jawbone = Jawbone\r\n\r\nexport default Jawbone"]}